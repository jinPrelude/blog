[ { "title": "[SNN Basic Tutorial 5] Leaky Integrate and Fire(LIF) 모델 설명", "url": "/posts/SNN-Basic-Tutorial-5-Leaky-Integrate-and-Fire-%EB%AA%A8%EB%8D%B8-%EC%84%A4%EB%AA%85/", "categories": "[KOR] SNN Basic Tutorial", "tags": "SNN Basic Tutorial, SNN, Spiking Neural Network, LIF, Leaky Integrate and Fire, python", "date": "2022-08-14 08:22:00 +0000", "snippet": "SNN Basic Tutorial 목차 Spiking Neural Network란 SNN을 위한 기초 뇌과학 SNN을 위한 회로이론(1): 기초 SNN을 위한 회로이론(2): RC회로 Leaky Integrate and Fire(LIF) 모델 설명 때가 왔습니다! 지금까지 배운 내용을 기반으로 이번 글에서는 SNN의 가장 기초적인 모델인 Leaky Integrate and Fire 모델을 알아보도록 하겠습니다.Leaky Integrate and Fire(LIF) 란이전 글 [SNN Basic Tutorial 3] SNN을 위한 회로이론(1): 기초 에서 “자연현상을 수학적으로 나타낼 수 있도록 가공하는 과정” 을 모델링이라고 설명하였습니다. 현재 다양한 목적에 맞게 동물의 뉴런을 모델링 한 다양한 모델이 있습니다. 한 예로 뉴런의 action potential을 가장 현실적으로 모사했다고 평가받는 모델은 바로 Hodgkin-Huxley model 인데, 이 모델은 1952년에 개발되었으며 실제 오징어의 squid giant axon을 실험적으로 분석하여 만들었습니다.앞서 소개드렸듯이 이번 포스트에서 다룰 모델은 Leaky Integrate and Fire(LIF) 모델입니다. LIF 모델은 뉴런이 가지고 있는 다음의 규칙이 모델링되었습니다: pre-synaptic neurons들의 spike를 종합한다. membrane potential이 threshold voltage를 넘으면 spike를 생성하고 reset voltage로 초기화된다. membrane potential voltage는 지속적으로 누수(Leak)가 일어난다.LIF 모델은 직관적이고 단순한 만큼 낮은 구현 난이도와 연산량 덕분에 SNN을 사용하는 응용 연구분야에 압도적으로 높은 채택비율을 자랑하는 모델이며(반대로 정확한 뉴런 모델을 원한다면 Hodgkin-Huxley 등 더 많은 선택지가 존재합니다), 동시에 SNN 모델을 공부하며 가장 첫번째로 살펴보는 모델이기도 합니다.LIF의 모델링: RC회로이전 포스트에서 언급했듯이 LIF 모델은 RC회로로 모델링될 수 있습니다. LIF모델의 특징과 규칙을 살펴보며 어떤 특징이 RC회로에 어떻게 대응되는지 살펴보겠습니다.1. Pre-synaptic neurons들의 spike를 종합한다.Pre-synaptic neurons들의 spike는 외부에서 들어오는 전력으로 볼 수 있으며, 이전 포스트에서의 공급원(혹은 강제응답)에 해당합니다.2. Membrane은 전하를 저장한다뉴런은 pre-synaptic으로부터 전해지는 action potential을 통해 뉴런 내에 Sodium ion을 저장합니다. 이러한 특징은 전력을 일시적으로 저장해놓는 커페시터로 모델링될 수 있습니다.3. Membrane potential은 시간이 지남에 따라 Resting Voltage로 돌아간다Membrane potential은 action potential에 이해 전압이 높아졌다가도 시간이 지나면 membrane을 통해 이온이 빠져나가며 다시 Resting potential, 혹은 Resting Voltage로 돌아갑니다. 이는 회로에 저항을 추가시킴으로써 구현해줄 수 있습니다. 또한 이전 회로에서의 $v(0)$이 바로 resting voltage가 되는데, 때문에 아래 그림과 같이 저희가 배운 RC회로에 Resting voltage가 되줄 전압원을 추가시켜주게 됩니다($V_r$은 resting voltage를 나타냅니다):LIF circuit위 그림과 같이 회로를 구성하게 되면서 화로의 $v(0)$을 저희가 원하는 resting voltage로 설정할 수 있게 되었습니다.4. membrane potential이 threshold voltage를 넘으면 spike를 생성하고 reset voltage로 초기화된다.이 부분은 회로를 통해서가 아닌 코딩을 통해서 처리해주게 됩니다. 전자회로의 전압응답(혹은 membrane potential)을 지속적으로 주시하며, 전압응답이 threshold voltage를 넘게 되면 post-synaptic neuron에게 spike를 전달한 다음, membrane potential을 reset voltage로 초기화시키는 코드를 추가시킬 것입니다.수치해석을 위한 $y(t, h)$ 구하기여느 컴퓨터 시뮬레이션과 마찬가지로 SNN 구현체 또한 오일러 방식(Euler method)을 이용하여 membrane potential을 구합니다.오일러 방식이란\\[y\\prime = f(t, y)\\]일때\\[y_{n+1} = y_n + dt \\cdot f(t_n, y_n)\\]와 같이 값을 근사합니다.여기서 $y$는 membrane potential의 $u$가 될 것이고, $f(t_n, y_n)$은 $\\frac{du}{dt}$가 될 것입니다. 저희가 이전 글들을 통해 배웠던 회로이론 지식을 통해 $\\frac{du}{dt}$을 구할 수 있습니다.KCL 법칙에 의하여:\\[I(t) = I_C + I_R\\]여기서:$I$ : 시간 $t$에서의 입력 전류$I_C$: 커페시터에 흐르는 전류$I_R$: 저항에 흐르는 전류입니다. 식을 계속 전개하면:\\[I(t) = \\frac{u(t) - u_{rest}}{R} + C\\frac{du}{dt}\\]여기서:$u(t)$ : 시간 $t$에서의 membrane potential$u_{rest}$: Resting Membrane potential 우변 첫 번째 항의 분자가 $u(t)$가 아닌 $u(t) - u_{rest}$ 인 이유는, Resting Voltage를 위해 전압원이 추가됨으로 인해 전위차를 뜻하는 전압의 정의에 의해 $u(t) - 0$이 아닌 $u(t) - u_{rest}$ 가 되었기 때문입니다.식을 $\\frac{du}{dt}$에 대해 전개해보면 다음과 같습니다:\\[C\\frac{du}{dt} = -\\frac{u(t)-u_{rest}}{R}+I(t)\\]\\[RC\\frac{du}{dt} = -[u(t)-u_{rest}] + RI(t)\\]마지막으로 RC를 시정수(Time constant) $\\tau$로 치환하여 표기하겠습니다.\\[\\therefore \\frac{du}{dt} = -\\frac{-[u(t)-u_{rest}]+RI(t)}{\\tau}\\]파이썬으로 LIF 모델을 구현해보자코드의 흐름은 다음과 같습니다: 뉴런 클래스 생성 main 함수 생성 main 함수에서 뉴런 클래스 인스턴스 생성 n초의 시간동안 뉴런에 전류를 가하고 매 순간마다 뉴런의 membrane potential 기록 시간에 따른 membrane potential을 그래프로 시각화하여 출력먼저 뉴런 클래스를 생성하겠습니다.뉴런 클래스 만들기마지막으로 LIF의 membrane potential 공식을 한번 더 살펴보겠습니다.\\[\\frac{du}{dt}=\\frac{−[u(t)−u_{rest}]+RI(t)}{\\tau_{m}}\\]식에서: $\\tau_m$ : 뉴런의 시정수(Time constant)를 나타냅니다. 코드에서는 self.tau 입니다. $\\frac{du}{dt}$ : membrane potential의 순간변화량을 나타냅니다. $u(t)$ : 시간 $t$ 에서의 membrane potential을 나타냅니다. 코드에서는 self.membrane_potential 입니다. $u_{rest}$: membrane의 resting voltage를 뜻합니다. 코드에서는 self.mv_rest 입니다. $R$: membrane의 저항을 뜻합니다. 코드에서는 저항의 역수인 컨덕턴스로 쓰이며 self.g 입니다. $I(t)$: 시간 $t$ 에서의 입력 전류를 뜻합니다. 코드에서는 input_current_pa 입니다. 위 식을 다음과 같이 변형하여 membrane potential의 순간변화량을 구할 수 있습니다:LIF 모델을 구현하는데에 필요한 변수들은 다음과 같습니다: Membrane potential의 resting voltage [$-65mV$] Membrane potential의 threshold voltage [$-55mV$] Membrane potential의 reset voltage [$-70mV$] 시정수 $\\tau_{m}$ [$10$] 저항 $R$ [0.1]중괄호에 적힌 수치들은 아래 코드에서 기본값으로 쓰일 수치입니다.주석과 함께 아래 코드를 분석해보겠습니다.class LifNeuron: def __init__(self, mv_reset = -70, mv_threshold = -55, mv_rest = -65, tau = 10, g = 10): self.mv_reset = mv_reset # resting voltage, mV self.mv_threshold = mv_threshold # threshold voltage, mV self.mv_rest = mv_rest # rest voltage, mV self.tau = tau # tau self.g = g # conductance, nanosiemens, nS self.membrane_potential = self.mv_reset # 현재의 membrane potential을 저장할 변수를 추가하고, rest voltage로 초기화한다. def step(self, input_current_pa = 0, dt = 0.001): \"\"\" delta t 의 크기와 delta t 동안 흐르는 전류의 양을 입력받고, 뉴런의 다양한 값들을 반환한다. Inputs ------ input_current_pa : 주입되는 전류량. 단위는 pA(피코암페어)이다. dt : delta t의 크기. 기본값은 millisecond인 0.001초이다. Return ------ infos [Dict] - membrane_potential : 현재 membrane potential 값, mV. - is_spike : 현재 뉴런의 action potential이 생성되었는지를 booloean 값으로 반환. \"\"\" is_spike = False # self.membrane_potential += (-(self.membrane_potential - self.mv_rest) + self.g * input_current_pa)* dt / self.tau if self.membrane_potential &gt;= self.mv_threshold : is_spike = True self.membrane_potential = self.mv_reset infos = { \"membrane_potential\": self.membrane_potential, \"is_spike\": is_spike } return infosif __name__==\"__main__\": observe_ms = 10000 # millisecond, 10초동안 관찰 neuron1 = LifNeuron() # 뉴런 생성 membrane_potential_history = [] # 10초동안의 membrane potential을 기록할 리스트, y축 dt_history = [i/1000 for i in range(observe_ms)] # 시간(초), x축 for ms in range(observe_ms): infos = neuron1.step(input_current_pa = 500, dt = 0.001) membrane_potential_history.append(infos[\"membrane_potential\"]) plt.plot(dt_history, membrane_potential_history) plt.show()위 코드는 깃허브와 Colab 2가지 경로로 업로드하였습니다: 깃허브 Colab마치며이 글을 마지막으로 [SNN Basic Tutorial] 시리즈는 마무리하겠습니다. 이해가 안되시는 부분이나 부가적인 설명이 더 추가되었으면 하는 부분은 거리낌없이 댓글 부탁드리겠습니다. 더 좋은 글을 위해 적극 반영하겠습니다. 아직 예정은 없지만 추후 개인적인 동기부여가 생기게 되면 중급 튜토리얼도 연재해보겠습니다. 여기까지 읽어주신 모든 분들께 감사드립니다!" }, { "title": "[SNN Basic Tutorial 4] SNN을 위한 회로이론(2): RC회로", "url": "/posts/SNN-Basic-Tutorial-4-SNN%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%9A%8C%EB%A1%9C%EC%9D%B4%EB%A1%A0(2)-RC%ED%9A%8C%EB%A1%9C/", "categories": "[KOR] SNN Basic Tutorial", "tags": "SNN Basic Tutorial, SNN, Spiking Neural Network, circuit, capacitor, rc circuit", "date": "2022-08-13 09:30:00 +0000", "snippet": "SNN Basic Tutorial 목차 Spiking Neural Network란 SNN을 위한 기초 뇌과학 SNN을 위한 회로이론(1): 기초 SNN을 위한 회로이론(2): RC회로 Leaky Integrate and Fire(LIF) 모델 설명 지난 글에서는 회로 이해에 필요한 기초적인 내용을 살펴보았습니다. 이번 글에서는 이전 내용을 기반으로 RC회로에 대하여 다뤄보도록 하겠습니다. 이번 글은 수식이 많지만, 천천히, 차례차례 읽고 이해하다 보면 어느새 이번 글의 목적인 RC회로의 응답을 구할 수 있으실 겁니다.RC 회로란?RC회로란 아래 그림과 같이 저항(R)과 커페시터(C)로 이루어진 회로를 말합니다. RC회로는 저장요소인 커페시터가 하나 있는 구조로써 1차회로 중 하나이며, 또 다른 1차회로로는 저항과 하나의 인덕터로 이루어진 RC회로가 있습니다. 회로이론에서는 미분방정식을 이용하여 1차회로의 저장요소에 흐르는 전압 혹은 전류를 찾는 방법을 배웁니다.RC 회로이번 글에서는 RC회로에 흐르는 전압응답을 구하는 방법을 알아볼 것입니다. 다른 말로는 RC회로의 전압을 시간에 따른 수식으로 구하는 방법을 알아볼 것입니다. RC회로의 전압응답을 구하는 것은 추후 SNN을 이해하는데 필수적인데, SNN의 가장 기초적인 모델인 Leaky Integrate and Fire(LIF) 모델의 기초가 되는 회로가 바로 이 RC회로이기 때문입니다. 때문에 RC회로의 전압응답을 구할 수 있다면, 시간에 따른 LIF 뉴런 모델의 membrane potential 또한 구할 수 있습니다. 저 또한 RC회로를 공부하면서 그동안 어려웠던 SNN 자료들을 훨씬 더 쉽게 이해할 수 있었습니다. 때문에 RC회로가 낮설다면 이 글을 읽어보신 후에 다음 글로 넘어가시기를 추천드립니다.RC회로의 완전응답이 글에서 저희가 최종적으로 전압응답을 구하고자 하는 회로는 위 그림처럼 저항과 커페시터만 연결되어있는 회로가 아닌, DC전압원이 추가적으로 부착되어있는 RC회로입니다(DC전압원은 전류, 전압 모두 일정한 출력을 내줍니다). DC전압원이 있는 RC회로의 형태는 아래와 같습니다:RC Circuit with sources이 회로에는 전력을 생성해내는 소자가 2개 있습니다. 하나는 $I_S$로 표기되는 DC전압원으로, 인위적으로 일정한 전력을 생성해내기에 강제응답이라고 부릅니다. 하나는 커페시터 $C$로, 커페시터에 저장된 전력이 회로를 타고 흐르게 됩니다. 이는 인위적인 공급이 아닌 커페시터에 저장된 전력이 자연스럽게 흐른다는 관점에서 비롯하여 고유응답이라고 부릅니다. 회로의 최종적인 응답(완전응답)은 강제응답과 고유응답의 합으로 구해집니다. 이번 글에서는 RC회로의 고유응답과 강제응답을 각각 유도해보고 두 식을 더하여 완전응답까지 구해보도록 하겠습니다.고유응답 유도: 무공급원 RC회로무공급원 RC회로란 별도의 전원부가 없는 RC회로를 말합니다. 무공급원 RC회로가 가능한 이유는 커페시터가 전력을 저장할 수 있기 때문인데, 때문에 무공급원 RC회로를 이야기할 때는 커페시터가(전원부 역할을 할 수 있도록) 충전되어있는 상태를 가정합니다. 이번 글에서는 시간 $t$에 따른 무공급원 RC회로의 전압을 구할 수 있는 방법을 알아보겠습니다.위 그림에서 Node A 기준으로 봤을 때, KCL에 의하여 전원부로부터 Node A로 들어오는 전류 $I_S$ 의 크기는 커페시터 $C$와 저항 $R$로 흐르는 전류$I_C$, $I_R$의 합과 같습니다.\\[I_S = I_C + I_R\\]위 RC회로 그림에서 전원부로부터 공급받는 전류가 0일 때를 무공급원 RC회로로 볼 수 있으며, 따라서 다음과 같은 식이 됩니다:\\[I_C + I_R = 0\\]위 식에 옴의 법칙을 적용하여 저희가 원하는 형태가 되도록 전개해보겠습니다. 전원부가 없다고 가정하므로 아래 식에서 고려되는 전압 $v_C$ 혹은 $v_C(t)$는 충전된 커페시터의 전압을 뜻합니다.\\[C\\frac{dv_C}{dt}+\\frac{v_C}{R} = 0\\]\\[\\frac{dv_C}{dt}=-\\frac{v_C}{RC}\\]\\[\\frac{dv_C}{v_C} = \\frac{dt}{RC}\\]전개된 식의 양 변을 적분하면 다음과 같습니다($K$는 적분상수):\\[\\int{\\frac{dv_C}{v_C}}=-\\int{\\frac{dt}{RC}}\\]\\[\\ln(v_C) = -\\frac{1}{RC}\\int{1\\cdot dt} = -\\frac{t}{RC} + K\\]\\[\\ln(v_C) =-\\frac{t}{RC} + K\\]\\[v_C(t) = e^{-\\frac{t}{RC}+K} = e^{K}e^{-\\frac{t}{RC}}\\]위 식에서 지수가 적분상수 $K$인 자연상수$e^K$는 큰 의미가 없으므로 $K$로 대체해줍니다:\\[\\therefore v_C(t) = Ke^{-\\frac{t}{RC}}\\]만약 공급원이 없이 저항과 커페시터만 있는 RC회로라면, 위 공식에 $t=0$을 넣어 식의 초기값 $v_C(0)$을 구할 수 있습니다:\\[v_C(0) = Ke^{-\\frac{0}{RC}} = K \\cdot 1 = K\\]\\[v_C(t) = v_C(0) \\cdot e^{-\\frac{t}{RC}}\\]강제응답 유도이번에는 공급원이 작동하는 RC회로의 전압 응답을 구해보겠습니다. 먼저 RC회로에 KCL 법칙을 적용해 유도한 공식을 적어놓고 시작하겠습니다. 아래 식에서 고려되는 전압 $v_S$ 혹은 $v_S(t)$는 전압원의 전압입니다(커페시터의 전압이었던 고유응답과의 차이에 유의하시기 바랍니다).\\[C\\frac{dv_S}{dt}+\\frac{v_S}{R} = I_S\\]\\[\\frac{dv_S}{dt} + \\frac{v_S}{RC} = \\frac{I_S}{C}\\]위 RC회로의 공급원은 DC이기에 전압원의 전압값이 변하지 않으므로, 식에서의 $v_S$값을 변수가 아닌 상수 $A$로 치환할 수 있습니다:\\[\\frac{d}{dt}A + \\frac{A}{RC} = \\frac{I_S}{C}\\]위 식의 첫번쨰 항 $\\frac{d}{dt}A$는 상수 A를 $t$에 대해 미분하는 형태이므로 소거됩니다 따라서\\[\\frac{A}{RC} = \\frac{I_S}{C}\\]\\[A = \\frac{I_S}{C} \\cdot RC = I_SR = v_S\\]\\[\\therefore v_S = I_SR\\]완전응답 유도위 그림과 같은 RC회로의 완전응답은 강제응답과 고유응답의 합과 같다고 하였습니다. 저희가 위에서 구한 결과를 통해 다음과 같은 식을 유도할 수 있습니다:\\[v(t) = v_C(t) + v_S(t)\\]\\[v(t) = Ke^{-\\frac{t}{RC}} + I_SR\\]위 식에서 적분상수 K를 구하면 식이 완성됩니다. 적분상수 K는 다음과 같이 유도할 수 있습니다:\\[v(0) = Ke^{-\\frac{0}{RC}} + I_SR = K \\cdot 1 + I_SR = K + I_SR\\]\\[v(0) = K + I_SR\\]\\[K = v(0) - I_SR\\]다음과 같이 구한 K를 완전응답 식에 대입해줌으로써 완전응답을 구할 수 있습니다:\\[\\therefore v(t) = (v(0) - I_SR)e^{-\\frac{t}{RC}} + I_SR\\]마치며이번 글에서는 RC회로의 전압응답을 구하는 방법을 알아보았습니다. 다음 글에서는 여태까지 공부했던 배경지식을 활용하여, 마침내 SNN의 가장 기본적인 모델인 Leaky Integrate and Fire 모델에 대하여 알아보도록 하겠습니다.글을 읽으시며 추가설명이 필요한 부분이나 이해가 어려운 부분, 혹은 오류가 있다면 댓글로 적어주시면 적극반영하도록 하겠습니다. 읽어주셔서 감사합니다." }, { "title": "[SNN Basic Tutorial 3] SNN을 위한 회로이론(1): 기초", "url": "/posts/SNN-Basic-Tutorial-3-SNN%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%9A%8C%EB%A1%9C%EC%9D%B4%EB%A1%A0(1)-%EA%B8%B0%EC%B4%88/", "categories": "[KOR] SNN Basic Tutorial", "tags": "SNN Basic Tutorial, SNN, Spiking Neural Network, circuit, capacitor", "date": "2022-07-13 02:01:00 +0000", "snippet": "SNN Basic Tutorial 목차 Spiking Neural Network란 SNN을 위한 기초 뇌과학 SNN을 위한 회로이론(1): 기초 SNN을 위한 회로이론(2): RC회로 Leaky Integrate and Fire(LIF) 모델 설명 지난 글에서는 SNN을 이해하는데 최소한으로 필요하다고 생각하는 기초적인 뇌과학을 다루었습니다. 이번 포스트에서는 SNN을 이해하는데 도움이 될 기초 회로이론을 다뤄보겠습니다.어떠한 자연 현상을 컴퓨터로 시뮬레이션하기 위해서는 그 현상을 수학적으로 나타낼 수 있도록 가공하는 과정이 필요한데, 저희는 이러한 과정을 모델링이라고 부릅니다. 시뮬레이션에는 모델링 과정이 필수적인 과정이고, SNN 또한 뉴런의 action potential을 수학적으로 모델링한 결과라고 볼 수 있습니다. 그럼 연구자들은 SNN을 어떻게 모델링하였을까요? 연구자들은 뉴련의 action potential을 모델링하기 위해 뉴런을 전기회로에 대입하여 생각하였습니다. 실제로 뉴런이 전기신호를 주고받기 때문에 전기회로로 모사하기 매우 적합했기 때문입니다. 저자가 처음 SNN을 공부할 때 SNN의 모델 공식이 잘 와닿지 않았는데, 전기회로에 대한 매우 기초적인 지식만 알고 가도 이해하는데 훨씬 수월하였습니다. 때문에 간단하게라도 기초적인 회로이론을 다루고 넘어가면 입문자 분들께 도움이 되지 않을까 하여 이번 글을 작성하게 되었습니다. 조금이라도 회로에 대한 기초적인 지식이 있으시거나 미분방정식이 익숙하신 분들은 바로 다음 글을 읽어보시는 것도 추천드립니다. 공식이 낮설거나 부담스럽게 느껴지신다면, 이 글을 읽으신 다음 다시 다음 글을 읽어보시면 더욱 수월하게 이해하실 수 있으실 겁니다.전기일상생활과 가장 밀접한 물리법칙은 거리, 속도, 가속도가 아닐까 싶습니다. 가속도가 누적되어 속도가 되고, 속도가 누적되어 이동거리의 변화로 이어집니다. 그럼 회로를 지배하는 물리법칙은 무엇일까요? 바로 전기입니다. 이번 전기 단원을 통해 전기와 관련된 기초 상식을 먼저 살펴보고 가겠습니다.전하전기의 가장 기본적인 단위는 ‘전하’ 입니다. 전하란 전기적 성질의 크기를 말하는데, 예를 들어 전기적으로 양성(+)을 띄는 양성자는 양전하를 띈다고 말합니다. 전하의 단위는 C(콜룸)이며, $6.24 \\cdot 10^{18}$ 개의 양성자가 갖는 전하를 1C로 정의합니다. 반데로 전기적으로 음성(-)을 띄는 전자가 $6.24 \\cdot 10^{18}$개 있을 경우 -1C로 정의할 수 있습니다. 수식에서 전하는 Q 혹은 q로 나타냅니다.전류전류란 단위시간동안 한 점을 통과하는 전하의 양을 의미하며, 식으로 나타내면 다음과 같습니다:\\[I = \\frac{\\Delta q}{\\Delta t}\\]단위는 A(암페어)이며, 1A는 1초동안 한 점을 통과하는 전하의 양이 1C임을 의미합니다.전압전압은 전위의 차이를 뜻합니다. 때문에 전위가 무엇인지 먼저 알아보겠습니다. 전위는 단위전하가 갖는 전기적 포텐셜 에너지를 뜻합니다. 말이 조금 어려우시다면 위키피디아에서 가져온 아래 그림을 참고하시기 바랍니다. 아래 그림에서 큰 구는 1C의 전하를, 작은 구는 -1C의 전하를 뜻하며, 보라색은 전위가 가장 높은 부분을, 청록색은 전위가 가장 낮은 부분을 뜻합니다. 전위는 양전하로부터 거리가 가까울 수록 높아지며, 음전하와 가까워질 수록 낮아집니다. 그리고 전하와 거리가 무한이 멀어졌을 때 전하가 0으로 수렴한다고 정의합니다.electric potential, 출저전압이란 기준점 A와 비교점 B의 전위의 차이를 뜻하며, 단위는 V(볼트)입니다. 때문에 전압은 절대적인 값이 아닌 상대적인 값임을 알 수 있으며, 기준점과 비교점 모두 존재해야 전압이 성립합니다. 그 예로 아래 배터리 예제를 살펴보겠습니다. 두 베터리는 각각 다른 음극과 양극의 전압을 가지고 있지만, 두 베터리의 전압은 10V로 같습니다. 왜냐하면 두 베터리의 양극을 기준으로 봤을 때 음극과의 전압차이가 10V로 같기 때문입니다.전압 예제법칙들위 단원에서 회로를 이해하기 위한 기본적인 개념들인 전하, 전위, 전류, 전압에 대하여 알아보았습니다. 이번 단원에서는 회로에 있어서 가장 기초적인 법칙 3가지를 알아보도록 하겠습니다.옴의 법칙(Ohm’s Law)옴의 법칙은 대부분 배우신 기억이 나실 겁니다. 옴의 법칙은 다음과 같이 나타냅니다:\\[V = IR\\]여기서 V는 전압, I는 전류, R은 저항입니다(저항은 전류를 방해하는 정도이며, 단위는 $\\Omega$(옴), 표기는 R입니다). 옴의 법칙을 시각적으로 이해하기 위해 가장 간단한 회로를 가져왔습니다.Ohm’s Law, 출저위 회로는 저항만 달려있는 매우 단순한 형태의 회로입니다. 그리고 전압 V가 존재하며 이로 인해 전류 I 가 생성되고 있습니다. 또한 그림에서 알 수 있는 사실은 전류는 전위가 높은 +에서 -로 흐른다는 사실입니다.저희는 옴의 법칙을 이용하여 V, I, R 3 가지 변수 중 두 가지만 알면 나머지 하나의 값을 구할 수 있습니다. 예를 들어 I가 3A, R이 $1\\Omega$일 경우 V는 $3A \\cdot 1\\Omega = 3V$가 됨을 알 수 있습니다. 다른 예로 V가 5V, R이 $2\\Omega$일 경우 I는 $I = \\frac{5V}{2\\Omega} = 2.5A$ 가 됨을 알 수 있습니다.키르히호프의 법칙(Kirchhoff’s Law)전기회로에서 가장 기초가 되는 법칙입니다. 키르히호프의 법칙에는 2가지가 있습니다:키르히호프의 전류 법칙(Kirchhoff’s Current Law) :키르히호프의 전류 법칙, 출저위 사진이 키르히호프의 전류 법칙을 잘 설명해주고 있습니다. 전류가 흐르는 회로에서 여러 전선이 겹치는 노드가 있을 때, 그 노드를 기준으로 노드에 들어가는 전류와 노드로부터 나가는 전류의 양이 같다는 것입니다.키르히호프의 전압 법칙(Kirchhoff’s Voltage Law) :키르히호프의 전압 법칙, 출저키르히호프의 전압 법칙은 위 그림과 같이 회로의 형태가 닫혀있는(폐쇄형) 회로에서 적용됩니다. 키르히호프의 전압 법칙에 따르면 폐쇄형 회로에서 생기는 모든 전압을 합한 값은 0입니다.커페시터(capacitor)케퍼시터는 부품 중 하나이며, 케퍼시터에 공급되는 전기를 자신의 역량만큼 저장하고 있다가 인가되는 전기가 중단되거나 줄었을 때 저장한 전기를 역으로 공급하는 기능을 합니다. 회로에서는 다음과 같이 나타내어집니다: 케퍼시터 표기, 출저 케퍼시터, 출저 케퍼시터의 원리를 알아내기 위해 당므과 같은 회로를 구상해보겠습니다(아래 왼쪽 그림2). capacitor circuit charged capacitor circuit 회로에서는 전원부와 커페시터만이 연결되어 있고 전원부는 V만큼의 전위차를 만들어내며 시계 방향으로 전류를 공급하고 있습니다. 전류가 흐를 때 전자는 전류의 반대방향으로 이동하기 때문에, 그림에서 전자는 시계 반대방향으로 이동하게 됩니다. 하지만 그림에서 커페시터에 의해 회로가 끊어져 있기 때문에, 전자들은 커페시터에 막혀 오른쪽 넓적한 판에 갇혀있게 됩니다. 오른쪽 판에 전자가 더 많이 모이게 될 수록 오른쪽 판이 점점 음전하를 띄게 되며 반대쪽 왼쪽 판에 양전하가 모이게끔 하는 역할을 하게 됩니다. 이 과정이 지속되다가 커페시터의 역량이 한계에 도달하여 더이상의 전자 축적이 되지 않는 상태까지 온 경우, 위와 같은 상호작용이 멈추게 되며 더이상 회로에 전류가 흐르지 않게 됩니다.그럼 다음과 같은 상황에서 전원부를 탈착하면 어떤 현상이 일어날까요? 전원부가 없어지게 되면 커페시터가 저장된 전기를 배출하며 전원부 역할을 하게 됩니다. 대신 이번에는 왼쪽 판의 전위가 더 높기 떄문에(양전하) 반시계 방향의 전류를 생성해 내며, 그 말인 즉슨 오른쪽 판에 축적된 전자를 시계방향으로 배출한다는 의미가 됩니다.capacitor circuit without power커페시터에도 공식이 존재하는데, 그 공식은 다음과 같습니다:\\[q = cv\\]여기서 q는 전하량, v는 전압을 나타내고, c는 비례상수로써 커페시터의 용량을 나타냅니다. 커페시터가 얼마나 많은 전하를 저장할 수 있는지를 나타냅니다. 고로 c가 크면 클수록 커페시터가, 혹은 커페시터에 컬리는 전압이 크면 클수록 많은 전하를 저장할 수 있다는 의미가 됩니다.마치며이번 글에서는 SNN을 공부하기 전에 알아두면 유용한 기초적인 회로이론 내용을 다뤄보았습니다. 다음 글에서는 SNN을 위한 회로이론 시리즈의 최종목적지인 RC회로가 무엇인지, 그리고 RC회로의 전압응답을 구하는 방법에 대하여 알아보도록 하겠습니다.글을 읽으시며 추가설명이 필요한 부분이나 이해가 어려운 부분, 혹은 오류가 있다면 댓글로 적어주시면 적극반영하도록 하겠습니다. 읽어주셔서 감사합니다." }, { "title": "[SNN Basic Tutorial 2] SNN을 위한 기초 뇌과학", "url": "/posts/SNN-Basic-Tutorial-2-SNN%EC%9D%84-%EC%9C%84%ED%95%9C-%EA%B8%B0%EC%B4%88-%EB%87%8C%EA%B3%BC%ED%95%99/", "categories": "[KOR] SNN Basic Tutorial", "tags": "SNN Basic Tutorial, SNN, Spiking Neural Network, Neuroscience, 뇌과학, 뉴런, 시넵스, 활동전위, action potential", "date": "2022-06-29 08:02:00 +0000", "snippet": "SNN Basic Tutorial 목차 Spiking Neural Network란 SNN을 위한 기초 뇌과학 SNN을 위한 회로이론(1): 기초 SNN을 위한 회로이론(2): RC회로 Leaky Integrate and Fire(LIF) 모델 설명 딥러닝을 공부해 보신 분들은 아시겠지만 DNN 네트워크의 형상학적인 부분을 동물의 신경망에서 영감을 받았다는 점을 제외하고는 더이상 생물학과 관련된 지식을 요구하지 않습니다. 하지만 이전 포스트 에서 언급했듯이 SNN의 경우 태생이 생명과학에 뿌리를 두고 있는 만큼 대부분의 명칭이 생물학적 용어를 그대로 차용합니다. 본 글에서는 SNN의 기반이 되는 기초적인 뇌과학을 다룹니다. 이 글을 읽고 SNN을 보신다면 더욱 깊은 이해를 하실 수 있으실거라 믿습니다. 이번 글을 읽으시기 전에 이전 포스트 를 읽고 오신다면 이해가 더욱 수월하실 겁니다. 본 내용은 Neuroscience: Science of the Brain에 많은 기반을 두고 있습니다. 놔과학에 대한 지식이 전무한 제가 입문할 수 있도록 많은 도움을 준 자료입니다. 추후 SNN 공부에 쓰이게 될 용어에 있어서는 영어로 표기하겠습니다. 한영혼용이 읽으실 때 불편하실 수는 있어도 추후 관련 자료를 보실 때 더 도움이 되시리라 믿습니다.Neuron의 구조DNN이 Neuron과 weight 두 가지 컴포넌트로 복잡한 연산을 처리하듯이, 동물의 뇌를 구성하는 가장 작은 단위는 Neuron입니다.Neuron의 명칭, 출저저희는 뉴런에서 Dendrite(수상돌기), Cell body(세포체), Axon(축삭돌기), Axon terminal(축삭돌기 말단) 이 4가지 요소에 주목하겠습니다.Dendrite 는 다른 뉴런들이 보내는 Spike를 받아 cell body 에 전달하게 됩니다. dendrite에는 Dendritic spine(수상돌기가시) 이라는 돌기 가시가 있는데(아래 좌측 그림 참고), dendritic spine마다 하나의 뉴런이, 정확히는 뉴런의 Axon terminal이 연결되어 있습니다. 즉, 한 줄기의 dendrite에 한 개 이상의 뉴런이 연결관계에 있습니다. 이렇게 dendrite로부터 종합된 정보들은 cell body에서 다른 dendrites들의 정보와 함께 다시 종합됩니다. 종합된 spike로 인한 action potential(활동전위)이 threshold voltage를 넘게 되면 Axon 을 통해 action potential을 전달하고, 그 연쇄반응으로 synapse에서는 또다른 뉴런의 dendritic spine을 통해 신호를 전달하기 위한 화학반응을 일으키게 됩니다. 아래 우측 그림은 기능적인 요소에 기반하여 뉴런을 단순화한 그림입니다. dendritic spine, 출저 Simplified Neuron, 출저 Action Potential이란뇌에서는 2가지 신호전달 방법이 있습니다. 하나는 화학적 신호, 하나는 전기적 신호입니다. 뉴런과 뉴런간에 신호가 전달될 때, 즉, dendritic spine과 axon terminal 간에는 화학적 신호전달이 일어나고, action potential 이 threshold를 넘어서 cell body에서 spike가 생성되어 axon을 통해 axon terminal로 spike를 보낼 때는 전기적 신호전달이 일어납니다. 먼저 뉴런 내부에서 전기적 신호전달이 어떻게 일어나는지, 즉, Action potential에 대해 알아보겠습니다.Action potential을 알기 위해서는 먼저 Membrane potential이 무엇인지 알아야 합니다. 뉴런은 Membrane(세포막)으로 감싸져 있으며 세포막을 기준으로 내부와 외부가 나뉘고, 내부와 외부 사이에 전위차가 존재합니다. 뉴런의 내부는 외부와 비교해 -65mv만큼의 전위차를 가지는데, 이 전위차를 Membrane Potential(막전위) 이라고 합니다. 그리고 뉴런의 내외부에는 양전하를 띄는 Sodium(나트륨) 과 Potassium(칼륨) 이 존재하는데, 내부에는 Potassium이, 외부에는 Sodium이 더 많이 분포해 있습니다(아래 그림 참조).membrane potential, 출저그럼 Action potential이란 무엇일까요? 위키피디아에 따르면 “근육·신경 등 흥분성 세포의 흥분에 따른 막 전위의 일시적 변화”라고 설명합니다(출저). 저희가 배우는 목적에 맞게 가공해보면 뉴런의 흥분(excitation)에 따른 Membrane potential의 일시적 변화라고 할 수 있겠습니다. 정의를 잘 기억하며 더 자세히 알아보겠습니다.Action potential은 cell body가 dendritic spines들로부터 다른 뉴런들의 화학적 신호를 받으면서 만들어집니다(화학적 반응에 대해서도 다음 절에서 알아보도록 하겠습니다). 특정 Dendritic spine에서 화학적 신호 전달이 이루어지게 되면 membrane에 붙어있는 ligand-gated Sodium channel(리간드 개폐 통로) 가 반응하여 열리게(활성화하게) 됩니다.Ligand-gated Sodium channel의 이름을 분석해보며 역할을 알아보겠습니다. channel(체널) 이란 세포막(membrane)에 붙어서 출입통로의 역할을 하는 기관으로 channel의 종류에 따라 다양한 조건에서 다양한 물질들을 출입시킵니다. 위 사진에서 노란색, 파란색, 보라색으로 그려진 것들이 세포막에 붙어있는 체널을 그린 것입니다. Sodium은 말 그대로 sodium을 드나들도록 한다는 뜻이며 Ligand-gated의 의미는 Neurotransmitter(신경전달물질)에 의해 개폐가 이루어진다는 의미를 가지고 있습니다. Neurotransmitter과의 상호작용에 대해서는 화학적 반응 챕터에서 더 자세히 알아보도록 하겠습니다.Ligand-gated Sodium channels들이 활성화되면 channel을 통해 외부의 sodium이 유입되며, 이로 인해 -65mV의 전위차를 가지고 있던 membrane potential의 값이 상승하게 됩니다. 하지만 뉴런의 membrane은 전류를 완전히 차폐하지는 못하는데, 때문에 만약 membrane potential의 값이 상승폭이 충분히 크지 못하면 membrane을 통한 전위 누수(Leak)가 일어나는 크기가 더 크게 되고, membrane potential은 다시 -65mV로 되돌아가게 됩니다. 반면 충분한 신호 전달이 이루어져 Membrane potential이 -55mV가 넘어가게 되면, 이때부터는 voltage-gated sodium channels(위 그림에서 보라색 채널)들이 열리게 됩니다. 이름에서 유추해볼 수 있듯이 이 체널은 membrane potential에 반응하며 -55mV가 되면 활성화되어 외부의 sodium을 뉴런 내부로 유입하게 되고, 이로 인해 membrane potential의 값이 -55mV에서 30~40mV까지 치솟게 됩니다. 고로 action potential은 membrane potential이 -55mV만 넘게 되면 시작된다고 볼 수 있고, 이 값을 threshold voltage라고 합니다.action potential의 visualization, 출저Membrane potential이 30~40mV에 다다르게 되면 열린 voltage-gated sodium channel들은 닫히게 되고(ligand-gated Sodium channel은 neurotransmitter이 떨어지면서 먼저 닫히게 됩니다) voltage-gated potassium channel(위 그림에서 노란색 채널)이 열리게 되는데, 이 potassium channel은 내부의 potassium을 외부로 배출시키는 역할을 합니다. 더이상의 sodium 유입이 막히고 potassium이 배출되기 시작하며 membrane potential은 급격히 떨어지기 시작합니다. 그리고 막전위가 -65mV 이하로 떨어지게 되면 potassium channel 또한 닫히게 되며 action potential이 끝나게 됩니다. 이 때 potassium의 배출에 관성이 붙게 되며 초기 membrane potential인 -65mV보다 더 떨어지게 되는데, 이는 sodium-potassium pump(위 그림에서 하늘색 채널) 에 의해 서서히 조정되어 다시끔 -65mV로 원상복구 되어집니다.sodium-potassium pump는 뉴런 내부의 sodium 3개와 외부의 potassium 2개를 맞바꾸는 역할을 수행하는 channel입니다. 이 sodium-potassium pump는 membrane potential을 원상복구해주는 것에 더해서 뉴런의 excitation으로 인해 급격하게 늘어난 뉴런 내부의 sodium, 그리고 급격하게 줄어든 potassium 또한 원상복구해 주는 역할을 수행합니다. 이 pump는 neurotransmitter 혹은 voltage에 의해 자동으로 작동하는 channels들과는 달리 별도의 에너지인 ATP가 있어야 작동하며, 때문에 뉴런 내부의 미토콘드리아에 의해 생성된 ATP를 소모하며 작동합니다.아래 그림은 action potential의 발생 단계를 직관적으로 시각화하였습니다.action potential의 단계, 출저화학적 신호전달: Neurotransmitter와 Synapse위와 같은 과정을 통해 만들어진 action potential은 axon을 따라 axon terminal로 이동합니다. 아래 그림에서 알 수 있듯이 action potential이 만들어진 뉴런의 axon terminal과 연결되어있는 neuron의 dentritic spine 사이에는 공간이 있기때문에 전기적 신호가 그대로 전해질 수는 없습니다. 때문에 Neuron과 Neuron끼리 신호를 전달할 때는 화학적 신호전달을 사용합니다. Action potential이 일어난 뉴런의 axon terminal과 연결되어있는 neuron의 dendritic spine을 포함한 공간을 Synapse(시냅스) 라고 칭합니다. 그리고 그 사이에 있는 공간을 Synaptic cleft라고 합니다.neuron and synapse, 출저Synapse를 기준으로 정보를 전달해주는(action potential이 생성된) 뉴런을 시냅스 뒤에 있다는 의미의 Pre-synaptic Neuron, 정보를 받는 뉴런을 Post-synaptic Neuron이라고 칭합니다. 이제 action potential이 생성된, 즉, excitation이 일어난 pre-synaptic neuron이 어떻게 post-synaptic neuron에게 화학적으로 신호를 전달해주는지 알아보도록 하겠습니다.아래 그림은 synapse 부분을 확대한 그림입니다. Axon terminal , dendritic spine, synaptic cleft 가 모두 잘 보입니다. Axon terminal에는 synaptic vesicles들이 존재하고 있습니다. 이 synaptic vesicle 안에는 위에서도 언급된 neurotransmitter들이 들어있습니다. 또한 Axon terminal의 세포막에는 Voltage-gated Ca channel이 붙어있는데(이제는 이름을 통해 어떤 역할인지 유추하실 수 있으실 겁니다), action potential이 도착해 membrane potential이 높아짐에 따라 channel이 열리게 되면 외부에서 칼슘이온이 axon terminal 내로 유입되게 됩니다. 칼슘이 들어오게 되면 synaptic vesicles는 synaptic cleft와 가까운 쪽의 세포막과 결합하게 되며, 이에 따라 synaptic vesicles 안에 있던 neurotransmitter가 synaptic cleft에 배출되게 됩니다. 배출된 neurotransmitter들은 post-synaptic neuron에 특정 채널과 결합하게 되는데, 이 채널이 바로 위에서 언급했던 Ligand-gated Sodium channel입니다. Ligand-gated Sodium channel은 neurotransmitter와 결합됨에 따라 활성화되며, 외부에 있는 sodium들이 Ligand-gated Sodium channel을 통해 post-synaptic neuron에 유입되게 됩니다. 이는 post-synaptic neuron의 membrane potential을 높이게 되고, 이 다음부터는 위에서 살펴본 action potential의 단계가 post-synaptic neuron에서 다시 시작되게 됩니다.synapse, 출저Neurotransmitter에는 Glutamate, Glycine, GABA 등 다양한 종류가 있으며, 그에 따라 Ligand-gated channel도 sodium에 반응하는 채널 외에도 다양한 종류가 있습니다. 본 글에서는 neurotransmitter과의 상호작용에 의해 post-synaptic neuron의 전위차를 상승시켜주는 경우만 살펴보았지만, 특정 ligand-gated ion channel은 전위차를 되려 낮추기도 합니다. 본 글의 목적은 SNN을 이해하기 위해 뇌과학의 기반을 다지기 위함으로 여기서 설명을 마무리하겠습니다.마치며이번 글에서는 SNN의 근간이 된 동물의 실제 뉴런과 시냅스의 구조와 역할에 대하여 알아보았습니다. 다음 글에서는 SNN을 이해하는 데에 필요한 기초 회로이론에 대하여 알아보겠습니다.글을 읽으시며 추가설명이 필요한 부분이나 이해가 어려운 부분, 혹은 오류가 있다면 댓글로 적어주시면 적극반영하도록 하겠습니다. 읽어주셔서 감사합니다." }, { "title": "[SNN Basic Tutorial 1] Spiking Neural Network란", "url": "/posts/SNN-Basic-Tutorial-1-Spiking-Neural-Network%EB%9E%80/", "categories": "[KOR] SNN Basic Tutorial", "tags": "SNN Basic Tutorial, SNN, Spiking Neural Network", "date": "2022-06-21 10:53:00 +0000", "snippet": "SNN Basic Tutorial 목차 Spiking Neural Network란 SNN을 위한 기초 뇌과학 SNN을 위한 회로이론(1): 기초 SNN을 위한 회로이론(2): RC회로 Leaky Integrate and Fire(LIF) 모델 설명 SNN Basic Tutorial 연재에서는 딥러닝에 대한 기조척인 이해는 있지만 SNN은 처음이신 분들이 SNN의 기본적인 개념부터, 가장 기초적인 SNN 모델인 Leaky Integrate and Fire model(LIF)의 미분방정식까지 이해하시는 것을 목표로 작성하였습니다. 또한 파이썬을 이용하여 간단한 LIF 모델까지 구현하여 볼 것입니다.SNN 이란SNN은 인공신경망(Artificial Neural Network, ANN)의 한 종류입니다. 인공신경망은 동물의 신경망이 정보를 처리하는 방식을 모방하여 만든 네트워크를 일컫는 말입니다. SNN은 이름 그대로 Spiking이 정보의 단위가 되며, 인공신경망이 그렇듯 뉴런과 시넵스로 이루어진 네트워크를 통해 전파됩니다. Spike는 기존 딥러닝 네트워크들(MLP, RNN, CNN 등)이 Tensor 혹은 실수값(float)을 주고받는 것에 비해 특정 뉴런에서 특정 시간에 Spike가 발생했는지에 대한 이산적인 정보만을 주고 받습니다.Spiking Neurons의 정보처리 방식, 출저그림은 두 개의 Spiking Neurons이 연결되어 있으며, pre Neuron이 post Neuron에게 정보를 전달하도록 설정되어있는 상태입니다. pre Neuron의 우측에 그려진 1차원 그래프는 시간축에 따라 pre Neuron이 post Neuron에게 총 3번의 Spike를 보낸다는 점을 알려줍니다. 사진의 가운데 파란색으로 채색된 그래프는 시간에 따른 post Neuron의 활동전위(action potential)를 나타냅니다(활동전위에 대해서는 Neuroscience 기초(1)에서 자세히 다루겠습니다). Post Neuron의 활동전위는 pre Neuron으로부터 Spike를 받을 떄 특정한 값만큼 치솟고, 시간이 지남에 따라 서서히 줄어듭니다(Leaky). 세 번째 Spike가 post Neuron에 들어오게 되면서 활동전위는 임의의 임계값(threshold)인 $u_{th}$를 넘게 되고, 그와 동시에 post Neuron의 활동전위의 값은 0으로 초기화됩니다. 그리고 사진의 가장 아랫쪽 빨간색으로 채색된 그래프를 보았을 때 post Neuron의 활동전위가 임계값을 넘는 동시에 post Neuron에서 Spike가 생성되었음을 알 수 있습니다.다수의 Pre Neurons가 연결되어있을 때에도 동일합니다(아래 그림 참고). 시간축에 따라 Pre Neurons의 Spiking을 받고 Post Neuron의 활동전위가 임계값을 넘게 되면 Post Neuron은 Spiking을 생성해 냅니다.다수의 Pre Neurons가 있는 SNN, 출저SNN의 특징과 장단점 본 글에서는 DNN을 tensor 기반 인공신경망(MLP, RNN, CNN 등)을 통칭하는 용어로 사용하였습니다. 더 좋은 표현이 있다면 반영하겠습니다.현재 연구적/상업적으로 가장 성공적인 인공신경망은 Deep Neural Network(DNN)기반의 인공신경망들이며, 일상생활에서 접할 수 있는 거의 모든 인공신경망은 DNN 기반입니다. DNN의 발전으로 인해 저희는 지금 손에 쥐어진 핸드폰의 음성비서부터 자율주행자동차까지 불과 몇년 전만 해도 소설에 나올법한 기술들을 일상생활에서 접하고 사용하고 있습니다. 그렇다면 SNN에 대한 연구가 지속되고 있는 데에는 어떠한 이유들이 있을까요?장점 1. 낮은 전력소모SNN이 상용화되었을 때 가장 수요가 많은 것으로 예상되는 분야는 바로 Robotics와 Edge computing 시장입니다. 두 분야 모두 low latency와 low energy consumption을 필요로 하는 분야인데, SNN이 기존 DNN보다 낮은 전력으로 기동 가능한 특징이 있기 때문입니다.무거운 양의 Tensor끼리의 행렬곱을 통해 연산이 이뤄지는 기존 DNN 방식과는 달리 SNN은 Spike의 누적에 의한 활동전위가 임계점을 넘으면 Spike를 보내는 단순한 구조로 되어있습니다. 이러한 방식은 아날로그적인 방식으로 구현이 가능하여 무거운 행렬연산을 위한 Computing Unit이 필요한 DNN과 달리 회로 레벨에서 직접적으로 신경망 구동을 설계할 수 있다는 장점이 있습니다. 때문에 SNN이 상용화 될 경우 저전력 고연산 작업이 필요할 것으로 예상되는 Robotics 분야가 특히 수혜를 볼 것이라는 의견이 있습니다. 이러한 특징때문에 SNN은 머신러닝 분야에서보다 반도체 분야에서 오히려 주목하고 SNN의 발전에 미리 준비하고 있는 모습입니다. 대표적으로 SNN신경망에 특화된 Intel의 Loihi 칩이 있습니다.SNN에 특화된 Intel의 Loihi칩-출처장점 2. Bio-Plausible“Spiking을 이용하여 정보를 전달한다”는 개념은 실제 동물의 뇌가 그렇게 작동한다는 점에서 영감을 받았습니다. DNN의경우 형상학적으로(topologically) 동물의 신경망에서 영감을 받았지만, 정보를 Spiking이 아닌 실수값으로 나타낸다는 점, 신경망을 갱신할 때 경사하강법(Gradient Descent)과 같은 Global Optimizartion Rule을 사용한다는 점에서 Bio-Plausible(생물학적으로 타당)하지 못합니다. 생물학적으로 가장 올바른 SNN 모델인 Hodgkin-Huxley model의 경우 머신러닝을 위해서가 아닌 실제 생물 뉴런의 활동전위를 수학적으로 모델링하기 위해 고안된 만큼(두 사람은 이 연구를 통해 1963년 노벨 생리학·의학상을 받았습니다-출저) 컴퓨터과학에 뿌리를 두고 있는 DNN과는 달리 SNN은 생물학에 기반을 두고 태어났습니다. 이러한 배경 때문에 DNN이 풀고 있는 문제를 SNN에 적용하는 과정에 있어서 괴리가 생기기도 하지만, 동시에 동물 뇌의 학습방법에 대한 연구가 발전함에 따라 SNN의 잠재능력 또한 확장될 수 있다는 특징이 있습니다. 이러한 특징은 동물의 뇌를 컴퓨터로 모델링 및 시뮬레이션하는 분야와 Bio-inspired 분야에 관심이 있는 머신러닝 연구자들로 하여금 관심을 가지도록 만들었습니다(저도 마찬가지고요ㅎㅎ).한계점: 효과적인 학습방법의 부재이러한 장점에도 불구하고 여전히 상용화와 거리를 좁히지 못하게끔 하는 SNN의 가장 큰 한계점이 있는데, 아직까지 SNN의 효과적인 학습방법을 찾지 못했다는 점입니다. STDP, ReSuMe, Dopamine-modulated STDP 등 다양한 학습방법이 존재하지만, DNN만큼 SNN을 상용화로 이끌만큼 강력한 학습방법론은 아직 전무한 상태입니다. 아무리 이론적으로 기존의 신경망보다 효율적이고 우월하다고 하더라도 효과적인 학습방법이 없다면 그 가치를 인정받기는 어렵습니다. 이는 DNN도 마찬가지였습니다. 비록 1950년대에 고안되었지만 컴퓨팅 성능, Gradient vanishing, 데이터 부족 등의 이유로 3번의 시대적 비수기를 겪고, 2010년 초가 되어서야 비로소 빛을 본 것과 같이 말이죠. 하지만 위에서 언급했듯이 DNN이 가지고 있지 않은 SNN만의 특징들이 그 메리트가 없어지지 않는 한, SNN을 상용화하기 위한 연구개발은 계속 될 것입니다.마치며본 글에서는 SNN의 소개를 다루었습니다. 다음 글부터는 SNN을 이해하기 위한 기초지식들을 다룰 예정입니다. SNN을 이해하기 위한 기초적인 뇌과학, 회로이론, 미분방정식 을 먼저 살펴본 다음, SNN에 대해서 본격적으로 다룰 계획입니다.다음 글인 SNN을 위한 기초 뇌과학 에서는 실제 동물의 뉴런과 시넵스의 구조, 역할에 대해서 알아보도록 하겠습니다." } ]
